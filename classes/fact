;IR code
;LABEL factorial
;LINK 
;STOREI 1 $T1
;NEI $P1 $T1 label1
;STOREI 1 $T2
;STOREI $T2 $T3
;STOREI $T3 $R
;RET
;JUMP label2
;LABEL label1
;STOREI 1 $T4
;SUBI $P1 $T4 $T5
;PUSH 
;PUSH $T5
;JSR factorial
;POP 
;POP $T6
;STOREI $T6 $L2
;MULTI $L2 $P1 $T7
;STOREI $T7 $L1
;LABEL label2
;STOREI $L1 $T8
;STOREI $T8 $R
;RET
;LABEL main
;LINK 
;WRITES input
;READI $L1
;STOREI 1 $T1
;NEI $L1 $T1 label3
;STOREI 1 $T2
;STOREI $T2 $L2
;LABEL label3
;STOREI 1 $T3
;LEI $L1 $T3 label4
;PUSH 
;PUSH $L1
;JSR factorial
;POP 
;POP $T4
;STOREI $T4 $L2
;JUMP label5
;LABEL label4
;STOREI 0 $T5
;STOREI $T5 $L2
;LABEL label5
;WRITEI $L2
;WRITES eol
;STOREI 0 $T6
;STOREI $T6 $T7
;STOREI $T7 $R
;RET
INT compare check: NEI
suffix is: r
INT compare check: NEI
suffix is: r
INT compare check: LEI
suffix is: r
;tiny code
str input "Please enter an integer number: "
str eol "\n"
push
jsr main
sys halt
label factorial 
link 2
move 1 r0
cmpr $1 r0
jne label1
move 1 r1
move r1 r2
move r2 $2
unlnk
ret
jmp label2 
label label1 
move 1 r3
move $1 r4
subi r3 r4
push
push r4
jsr factorial
pop
pop r5
move r5 $-2
move $-2 r6
muli $1 r6
move r6 $-1
label label2 
move $-1 r7
move r7 $2
unlnk
ret
label main 
link 2
sys writes input
sys readi $-1
move 1 r0
cmpr $-1 r0
jne label3
move 1 r1
move r1 $-2
label label3 
move 1 r2
cmpr $-1 r2
jle label4
push
push $-1
jsr factorial
pop
pop r3
move r3 $-2
jmp label5 
label label4 
move 0 r4
move r4 $-2
label label5 
sys writei $-2
sys writes eol
move 0 r5
move r5 r6
move r6 $1
unlnk
ret
end
